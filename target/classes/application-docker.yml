spring:
  # Database Configuration for Docker
  datasource:
    url: jdbc:mysql://mysql:3306/shopcuathuy?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  # JPA Configuration for Docker
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
  
  # Redis Configuration for Docker
  data:
    redis:
      host: redis
      port: 6379
      password: 
      database: 0
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms
  
  # RabbitMQ Configuration for Docker
  rabbitmq:
    host: rabbitmq
    port: 5672
    username: guest
    password: guest
    virtual-host: /
    connection-timeout: 15000
    listener:
      simple:
        acknowledge-mode: auto
        retry:
          enabled: true
          max-attempts: 3
          initial-interval: 1000
          max-interval: 10000
          multiplier: 2

# Application Configuration for Docker
app:
  jwt:
    secret: mySecretKey123456789012345678901234567890
    expiration: 86400000 # 24 hours
    refresh-expiration: 604800000 # 7 days
  
  cors:
    allowed-origins: http://localhost:3000,http://localhost:3001
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
    max-age: 3600
  
  file:
    upload-dir: uploads/
    max-size: 10485760 # 10MB
    allowed-types: jpg,jpeg,png,gif,webp,pdf,doc,docx
  
  payment:
    vnpay:
      tmn-code: 
      hash-secret: 
      url: https://sandbox.vnpayment.vn/paymentv2/vpcpay.html
      return-url: http://localhost:3000/payment/return
  
  minio:
    endpoint: http://minio:9000
    access-key: minioadmin
    secret-key: minioadmin
    bucket-name: shopcuathuy
    secure: false
  
  notification:
    email:
      from: noreply@shopcuathuy.com
      from-name: ShopCuaThuy
    sms:
      provider: twilio
      twilio:
        account-sid: 
        auth-token: 
        phone-number: 

# Server Configuration for Docker
server:
  port: 8080
  servlet:
    context-path: /api
    session:
      timeout: 30m
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

# Management & Actuator for Docker
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env,configprops
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.95, 0.99

# Logging Configuration for Docker
logging:
  level:
    com.shopcuathuy: INFO
    org.springframework.security: WARN
    org.springframework.web: WARN
    org.hibernate.SQL: false
    org.hibernate.type.descriptor.sql.BasicBinder: false
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/shopcuathuy-backend.log
    max-size: 10MB
    max-history: 30

# OpenAPI Documentation for Docker
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
  packages-to-scan: com.shopcuathuy.controller
